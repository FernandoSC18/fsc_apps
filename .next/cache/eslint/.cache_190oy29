[{"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\404.jsx":"1","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\index.jsx":"2","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\pomodoro.jsx":"3","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\_app.js":"4","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\_document.js":"5","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnIcon.jsx":"6","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnIconFAI.jsx":"7","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnText.jsx":"8","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\clock.jsx":"9","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\numberPicker.jsx":"10","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\containerPop.jsx":"11","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popAddProyect.jsx":"12","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popDeletePost.jsx":"13","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popDeleteProyect.jsx":"14","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditPrimaryImage.jsx":"15","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditProyect.jsx":"16","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditText.jsx":"17","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditTitle.jsx":"18","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popErrorUser.jsx":"19","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popExample.jsx":"20","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popLoginError.jsx":"21","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popVentaStatusEdit.jsx":"22","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popupSettings.jsx":"23","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popupTemplate.jsx":"24","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabInfo.jsx":"25","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabs.jsx":"26","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabTasks.jsx":"27","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabTips.jsx":"28","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\timerClock.jsx":"29","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\windowDimensions.jsx":"30","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\copia.jsx":"31","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\privacypolicy\\codigo.jsx":"32","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\privacypolicy\\volado3d.jsx":"33","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\title.jsx":"34"},{"size":126,"mtime":1651265779906,"results":"35","hashOfConfig":"36"},{"size":1209,"mtime":1655408532850,"results":"37","hashOfConfig":"36"},{"size":3662,"mtime":1651356659410,"results":"38","hashOfConfig":"36"},{"size":150,"mtime":1651604050120,"results":"39","hashOfConfig":"36"},{"size":910,"mtime":1651355937020,"results":"40","hashOfConfig":"36"},{"size":1164,"mtime":1624996975758,"results":"41","hashOfConfig":"36"},{"size":1244,"mtime":1635360879121,"results":"42","hashOfConfig":"36"},{"size":826,"mtime":1624647229514,"results":"43","hashOfConfig":"36"},{"size":2131,"mtime":1625023826371,"results":"44","hashOfConfig":"36"},{"size":2268,"mtime":1625037334892,"results":"45","hashOfConfig":"36"},{"size":5941,"mtime":1650841600645,"results":"46","hashOfConfig":"36"},{"size":13726,"mtime":1650843144040,"results":"47","hashOfConfig":"36"},{"size":2692,"mtime":1650650906983,"results":"48","hashOfConfig":"36"},{"size":2722,"mtime":1650649402878,"results":"49","hashOfConfig":"36"},{"size":4226,"mtime":1650574331735,"results":"50","hashOfConfig":"36"},{"size":14458,"mtime":1650843145793,"results":"51","hashOfConfig":"36"},{"size":2668,"mtime":1650573792552,"results":"52","hashOfConfig":"36"},{"size":5856,"mtime":1650572673974,"results":"53","hashOfConfig":"36"},{"size":1831,"mtime":1650570135948,"results":"54","hashOfConfig":"36"},{"size":1831,"mtime":1650570135948,"results":"55","hashOfConfig":"36"},{"size":1651,"mtime":1650657453479,"results":"56","hashOfConfig":"36"},{"size":6196,"mtime":1649226080381,"results":"57","hashOfConfig":"36"},{"size":6878,"mtime":1651346369640,"results":"58","hashOfConfig":"36"},{"size":6163,"mtime":1635363047124,"results":"59","hashOfConfig":"36"},{"size":248,"mtime":1625024224230,"results":"60","hashOfConfig":"36"},{"size":2622,"mtime":1651346474325,"results":"61","hashOfConfig":"36"},{"size":250,"mtime":1625024229989,"results":"62","hashOfConfig":"36"},{"size":248,"mtime":1625024215439,"results":"63","hashOfConfig":"36"},{"size":1990,"mtime":1625023683941,"results":"64","hashOfConfig":"36"},{"size":649,"mtime":1651266300268,"results":"65","hashOfConfig":"36"},{"size":730,"mtime":1651356652251,"results":"66","hashOfConfig":"36"},{"size":4068,"mtime":1655409309311,"results":"67","hashOfConfig":"36"},{"size":4918,"mtime":1655409013700,"results":"68","hashOfConfig":"36"},{"size":688,"mtime":1655408953942,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7567ek",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\404.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\index.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\pomodoro.jsx",["153","154"],"import Head from \"next/head\" \r\n\r\nimport styled from 'styled-components';\r\nimport logo from '../src/images/tomato.jpg';\r\nimport TimerClock from '../components/timerClock.jsx';\r\nimport Tabs from '../components/tabs.jsx';\r\n//import BtnText from './components/btnText.jsx';\r\n//import BtnIcon from './components/btnIcon.jsx';\r\nimport BtnIconFAI from '../components/btnIconFAI';\r\nimport PopupSettings from '../components/popupSettings.jsx';\r\nimport PopupTemplate from '../components/popupTemplate';\r\nimport Clock from '../components/clock.jsx';\r\nimport { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\r\n \r\n\r\n\r\nexport default function Pomodoro() {\r\n\r\n \r\n  function handleOpenSetting (props){   \r\n    setPopSettings({visibility:'visible', opacity:1})\r\n  }\r\n\r\n  function handleCloseSetting (props){   \r\n    setPopSettings({visibility:'hidden', opacity:0}) \r\n  }\r\n  \r\n  const [countEvents, setCountEvents] = useState()\r\n  const [popSettings, setPopSettings] = useState({ \r\n    visibility: 'hidden', opacity:0\r\n  } )\r\n \r\n  const iconSettings = <FontAwesomeIcon icon={faCog} />\r\n \r\n  const HeadPage = () => {\r\n\r\n      return <Head>\r\n          <meta charSet=\"utf-8\"/>\r\n          <title> Pomodoro </title>\r\n          <link rel=\"manifest\" href=\"/manifest_pomodoro.json\" />\r\n          <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n          <meta name=\"theme-color\" content=\"$fff\"/>\r\n          <meta name=\"autor\" content=\"autor\"/>\r\n      </Head>\r\n\r\n  }\r\n\r\n  return <> \r\n      <HeadPage/> \r\n\r\n      <PopupSettings visibility={popSettings.visibility} stylesInfo={colorsApp} opacity={popSettings.opacity} closeClic={handleCloseSetting}/>\r\n      \r\n      <header className=\"App-header\"> \r\n      </header>\r\n      <main>\r\n         \r\n\r\n        <Encabezado>\r\n              <ClockArea> \r\n                    <Clock></Clock>\r\n              </ClockArea>\r\n              <SettingsArea> \r\n                    <BtnIconFAI onClick={handleOpenSetting} stylesInfo={colorsApp.btnStyle} icon={iconSettings} content=\"Ajustes\" />\r\n              </SettingsArea>\r\n              {/*\r\n              <BtnIcon stylesInfo={colorsApp.btnStyle} iconSrc=\"favicon.ico\" />\r\n              <BtnIcon stylesInfo={colorsApp.btnStyle} iconSrc=\"https://www.w3schools.com/images/w3lynx_200.png\" content=\"BOTION\" />\r\n              */}\r\n        </Encabezado>\r\n        <div className=\"tomatoArea\">\r\n          <img src={logo} className=\"tomatoimg\" alt=\"logo\" />\r\n          <div className=\"tomatoCounter\">\r\n            <TimerClock events={countEvents}/>\r\n          </div>\r\n        </div> \r\n        <br/>\r\n        <div> \r\n          <Button onClick={ () => {setCountEvents('start')} }> Iniciar Cuenta Atras </Button>\r\n        </div> \r\n        <br/>\r\n        <div> \r\n          <Tabs> </Tabs>\r\n        </div> \r\n\r\n      </main>   \r\n      <footer>  \r\n\r\n      </footer>   \r\n      \r\n    </> \r\n}\r\n \r\n\r\n\r\nconst colorsApp = {\r\n  btnStyle: {\r\n    border: 'solid',\r\n    colorBorder: '#ffdc18',\r\n    background: '#ffdc18', \r\n    colorText: '#000', \r\n  }, \r\n} \r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid palevioletred;\r\n  color: palevioletred;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n`\r\n\r\nconst Encabezado = styled.div` \r\n  display: block;   \r\n  width: auto;\r\n  height: 50px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`\r\n\r\nconst ClockArea = styled.div` \r\n  display: block;  \r\n  position: absolute;\r\n  left: 0px;\r\n  bottom: 0px;\r\n`\r\nconst SettingsArea = styled.div` \r\n  display: block;  \r\n  position: absolute;\r\n  right: 0px;\r\n  bottom: 0px; \r\n`\r\n","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\_app.js",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\_document.js",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnIcon.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnIconFAI.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\btnText.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\clock.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\numberPicker.jsx",["155","156","157"],"\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst fontSize = 18\r\n\r\nconst Piker = styled.div`\r\n    width: 100%;\r\n    height: 50px; \r\n    font-size: ${fontSize}px;\r\n`\r\n\r\nconst ArrowUp = styled.div`\r\n    display: block;\r\n    padding: 5px;\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;  \r\n    color: #979797;\r\n`\r\n\r\nconst ArrowDown = styled.div`\r\n    display: block;\r\n    padding: 5px;\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;  \r\n    color: #979797;\r\n`\r\n\r\nconst PikerNumber = styled.input`\r\n    display: block;\r\n    font-size: ${fontSize}px;\r\n    padding: 0;\r\n    margin: auto;\r\n    box-sizing: border-box; \r\n    appearance: none;\r\n    border: 1px solid #c2c2c2;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n   \r\n    -moz-appearance: textfield;\r\n    &::-webkit-outer-spin-button,&::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nexport default function NumberPicker (){\r\n\r\n    const [numberValue, setNumberValue] = useState (0)\r\n    const [numberMax, setNumberMax] = useState (60)\r\n    const [numberMin, setNumberMin] = useState (0)\r\n\r\n\r\n    const iconArrowUp = <FontAwesomeIcon icon={faChevronUp} />\r\n    const iconArrowDown = <FontAwesomeIcon icon={faChevronDown} />\r\n\r\n    function handleChangeNumber (newValue) {  \r\n        var value = newValue\r\n        if (value > numberMax){\r\n            value = numberMax\r\n        }else if (value < numberMin){ \r\n            value = numberMin\r\n        } \r\n        setNumberValue(value)\r\n    }\r\n\r\n    \r\n    function handleUp () { \r\n        handleChangeNumber(numberValue + 1)\r\n     }\r\n\r\n    function handleDown () { \r\n        handleChangeNumber(numberValue - 1)        \r\n     }\r\n\r\n\r\n    return <Piker>\r\n        <ArrowUp onClick={()=>handleUp()}> {iconArrowUp} </ArrowUp>\r\n        <PikerNumber type='number' min={numberMin} max=\"5\" onChange={(element)=>handleChangeNumber(element.target.value)} value={numberValue}/> \r\n        <ArrowDown onClick={()=>handleDown()}> {iconArrowDown} </ArrowDown> \r\n    </Piker>\r\n\r\n\r\n}","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\containerPop.jsx",["158","159","160","161","162","163"],"import { useEffect, useState } from 'react'; \r\nimport styled, {keyframes} from 'styled-components';  \r\n   \r\nfunction usePopup( title, close_icon, close_btn) { \r\n\r\n  const [showState, setShowState] = useState(false)\r\n  const [titleState, setTitleState] = useState(title)\r\n  const [closeIconState, setCloseIconState] = useState(close_icon)\r\n  const [closeBtnState, setCloseBtnState] = useState(close_btn)\r\n  const [popupElementState, setPopupElementState] = useState(null) \r\n\r\n  const show = () => {\r\n    setShowState(true)\r\n  }\r\n\r\n  const hide = () => {\r\n    setShowState(false)\r\n  }\r\n\r\n  const setElementPop = (element) => {\r\n    setPopupElementState(element)\r\n  }\r\n /*\r\n  refProperties.setProperties( {\r\n      show: true, \r\n      title: title,  \r\n      popupElement: popupElement  \r\n  } ) */ \r\n\r\n  return { \r\n    show,\r\n    hide,\r\n    setElementPop,\r\n\r\n    showState,\r\n    titleState,\r\n    closeIconState,\r\n    closeBtnState,\r\n    popupElementState,\r\n  }\r\n \r\n} \r\n  \r\n\r\n\r\nexport default function ContainerPopup ({propiedades}){ \r\n\r\n  //console.log('properties', propiedades)\r\n     \r\n  if (propiedades == null || !propiedades.showState || propiedades.popupElementState == null) {\r\n      return null\r\n  } \r\n\r\n  return <ContainerAlertS show={propiedades.showState}> \r\n            <CenterS>  \r\n                <AlertContentS>  \r\n                      <InputsArea> \r\n                        <Message_s>\r\n                            {propiedades.titleState}   \r\n                            {propiedades.closeIconState ? <BtnCloseX onClick={propiedades.hide} > X </BtnCloseX> : null} \r\n                        </Message_s>  \r\n                        <Line/> \r\n                        {propiedades.popupElementState}\r\n                      </InputsArea>\r\n                      \r\n                      {propiedades.closeBtnState\r\n                        ? <PopFootter>   \r\n                              <FotterRigth>   \r\n                                  <BtnCloseS onClick={propiedades.hide}>  \r\n                                      Cerrar\r\n                                  </BtnCloseS>   \r\n                              </FotterRigth>   \r\n                              \r\n                        </PopFootter>\r\n                      : null} \r\n                </AlertContentS>\r\n            </CenterS>\r\n        </ContainerAlertS>\r\n}\r\n \r\n \r\nexport {\r\n  usePopup \r\n  \r\n}\r\n\r\n\r\nconst started = keyframes`    \r\n  from {opacity: 0;} \r\n  to {opacity: 1;}\r\n`;\r\n \r\nconst ContainerAlertS = styled.div`\r\n    display: ${({show}) => show ? 'block' : 'none'};\r\n    width: 100%;\r\n    height: 100%;  \r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;  \r\n    z-index: 999999999;\r\n`\r\n\r\nconst CenterS = styled.div` \r\n  max-width: 90%;\r\n  max-height: 90%; \r\n  position: relative;\r\n  display: block;\r\n  width: max-content;\r\n  height: max-content;\r\n  top: 50%;\r\n  margin: auto;\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);   \r\n \r\n`\r\n\r\nconst BtnCloseS = styled.div`   \r\n    color: #FFF;   \r\n    background: #ff757c;   \r\n    border: 1px solid pink;  \r\n    border-radius: 10px;\r\n    display: inline-flex; \r\n    align-items: center;\r\n    vertical-align: middle;\r\n    box-sizing: border-box;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 18px 10px;\r\n    height: 20px;   \r\n    transition: all 50ms linear;\r\n    cursor: pointer;\r\n    &&:hover{\r\n        transform: scale(1.02);\r\n        background: #FFF;   \r\n        color: #ff757c;   \r\n    }\r\n` \r\n\r\nconst AlertContentS = styled.div` \r\n  position: relative;\r\n  display: block;    \r\n  background: #1d1e1f;   \r\n  border-radius: 5px;\r\n  padding: 5px 10px; \r\n  animation: ${started} 500ms normal ; \r\n  -webkit-box-shadow: 0 0 10px 2px #FFF;\r\n  box-shadow: 0 0 10px 2px #FFF; \r\n` \r\n\r\nconst PopFootter = styled.div`   \r\n  display: flex;\r\n  align-items: center; \r\n  justify-content: flex-end;  \r\n  width: 100%;\r\n  height: 60px; \r\n  padding: 10px 0; \r\n  bottom: 0; \r\n  right: 0; \r\n  box-sizing: border-box; \r\n` \r\n\r\nconst InputsArea = styled.div`\r\n  width: 100%;  \r\n  display: block;     \r\n  padding: 5px 20px;\r\n  box-sizing: border-box;\r\n  max-height: 60vh; \r\n  overflow-y: auto;\r\n  overflow-x: hidden; \r\n`\r\n\r\nconst Line = styled.div`\r\n  background: #616161;\r\n  position: relative;\r\n  display: block; \r\n  width: 100%;\r\n  height: 2px;\r\n  margin: 8px 0 0 1px;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n`\r\n\r\nconst BtnCloseX = styled.button` \r\n    z-index: 1;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    display: inline-block;    \r\n    color: #FFF;   \r\n    background: #ff757c;     \r\n    font-size: 18px;\r\n    font-weight: bold;  \r\n    padding: 10px; \r\n    margin: 5px; \r\n    outline: none;\r\n    border: none;\r\n     \r\n    background: #1d1e1f;\r\n    width: max-content;\r\n    height: max-content;  \r\n    cursor: pointer; \r\n    \r\n    &&:after{\r\n        position: absolute;\r\n        content: 'X';\r\n        background: #ff757c;\r\n        color: #FFF;   \r\n        border-radius: 10px;\r\n        width: max-content;\r\n        height: max-content;  \r\n        padding: 5px 8px;\r\n        margin: auto; \r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0; \r\n    }\r\n    &&:hover:after{\r\n        position: absolute;\r\n        content: 'X';\r\n        background: #FFF;\r\n        color: #ff757c;   \r\n        border-radius: 10px;\r\n        width: max-content;\r\n        height: max-content;  \r\n        padding: 5px 8px;\r\n        margin: auto; \r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0; \r\n    }\r\n`\r\n\r\nconst Message_s = styled.div`\r\n  width: 100%;  \r\n  font-size: 18px; \r\n  text-align: center;\r\n  font-weight: bold;\r\n  display: block; \r\n`\r\nconst MessageNote_s = styled.div`\r\n  width: 100%;  \r\n  font-size: 18px;\r\n  margin-top: 15px; \r\n  font-weight: bold;\r\n  text-align: justify;\r\n  display: block; \r\n`\r\nconst FotterRigth = styled.div`\r\n  position: absolute; \r\n  display: inline-block;\r\n  right: 0;\r\n  padding: 0 10px;\r\n` ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popAddProyect.jsx",["164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\nimport firebaseClient from '../../services/firebase_client'   \r\nimport firebase_auth from '../../services/firebase_auth';\r\n\r\nexport default function PopAddProyect ({ update, firebase, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n    const iconPlus = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [descripcion, setDescripcion] = useState('')\r\n    const [images, setImages] = useState (null)\r\n    const [urlPublic, setUrlPublic] = useState ('')\r\n\r\n    const [tecnologias, setTecnologias] = useState ([])\r\n    const [tecnologiasIcons, setTecnologiasIcons] = useState ([])\r\n    const [columna, setColumna] = useState ('')\r\n    const [columnaPos, setColumnaPos] = useState ('')\r\n\r\n    \r\n\r\n    useEffect(() => {   \r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {    \r\n\r\n        if (title == null || title == '') {\r\n            alert ('El titulo no puede estar vacio')\r\n            return \r\n        }else if (descripcion == null || descripcion == ''){\r\n            alert('Coloca alguna descripcion')\r\n            return \r\n        }else if (images == null){\r\n            alert('No se ha seleccionado ninguna imagen')\r\n            return \r\n        }else if (columna == null || columna == ''){\r\n            alert('No se ha seleccionado ninguna columna')\r\n            return\r\n        }else if (columnaPos == null || columnaPos == ''){\r\n            alert('No se ha seleccionado ninguna posicion')\r\n            return\r\n        }\r\n\r\n        firebase_auth.authState((user)=>{\r\n            if (user) {  \r\n                const uid = user.uid \r\n                handleNew(uid)\r\n            } else {\r\n                // User is signed out  \r\n                console.log('user no validado' )  \r\n                window.location.href = \"/\" \r\n            }\r\n        }) \r\n \r\n    }\r\n\r\n    const handleNew = async (uid) => {\r\n\r\n        const finalTecnologias = [] \r\n\r\n        for (let index = 0; index < tecnologias.length; index++) {\r\n            finalTecnologias.push({ \r\n                    name: tecnologias[index],\r\n                    icon: tecnologiasIcons[index],\r\n            })\r\n        } \r\n\r\n\r\n        const proyect = {\r\n            proyect_image: images,\r\n            proyect_link: urlPublic,\r\n            proyect_technologies: JSON.stringify(finalTecnologias),\r\n            proyect_title: title,\r\n            proyect_desc: descripcion,\r\n            position_col: Number(columnaPos),\r\n            columna: Number(columna),\r\n\r\n            created_date: new Date(),\r\n            updated_date: new Date(),\r\n            created_by: uid,\r\n            updated_by: uid, \r\n        }  \r\n\r\n        const result = await firebaseClient.addNewProyect(firebase, proyect)\r\n        console.log('result', result)\r\n        update()\r\n        hide()\r\n\r\n    }\r\n    \r\n    async function changeImage (value) { \r\n        const newFile = value[0] \r\n         \r\n        const base64 = await getBase64(newFile)\r\n        setImages(base64) \r\n    }\r\n    \r\n    function deleteImage () { \r\n        setImages() \r\n    } \r\n \r\n    \r\n    //base64 from file\r\n    const getBase64 = (file) => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file );\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n    \r\n    return <PopContainer>    \r\n            <Label>\r\n                Titulo\r\n                <Input type=\"text\" value={title} onChange={(e) => {setTitle(e.target.value)}} />\r\n            </Label> \r\n            <Label>\r\n                Descripcion\r\n                <TextArea type=\"text\" value={descripcion} onChange={(e) => {setDescripcion(e.target.value)}} />\r\n            </Label>\r\n\r\n                \r\n            <InputFile required={false} multiple={false} result={'Imagen'} \r\n                files={images} \r\n                addImage={changeImage} \r\n                deleteImage={deleteImage} />\r\n\r\n            <Label>\r\n                Previsualización\r\n                { images != null ? <RowImage_s>     \r\n                    <ItemRow_s> \r\n                        <ImagePreview src={images}  />\r\n                    </ItemRow_s> \r\n\r\n                    <ItemRow_s>  \r\n                        <BtnIconFAI onClick={async ()=>{deleteImage()}} \r\n                        background={'red'}\r\n                        icon={iconTrash} title={'Eliminar'}/>\r\n                    </ItemRow_s>  \r\n                </RowImage_s>\r\n                : null } \r\n            </Label> \r\n            <Label>\r\n                URL Publica del Proyecto\r\n                <Input type=\"text\" value={urlPublic} onChange={(e) => {setUrlPublic(e.target.value)}} />\r\n            </Label>  \r\n\r\n            <Label>\r\n                Tecnologias\r\n                <TecnoArea> { tecnologias == null ? null\r\n                    : tecnologias.map((tecno, index) => { \r\n                        \r\n                        async function changeImage2 (value) { \r\n                            const newFile = value[0]                             \r\n                            const base64 = await getBase64(newFile)\r\n                            \r\n                            const newTecnoIcons = [...tecnologiasIcons] \r\n                            newTecnoIcons[index] = base64 \r\n                            setTecnologiasIcons(newTecnoIcons) \r\n                        }\r\n                        \r\n                        function deleteImage2 () {  \r\n                            const newTecnoIcons = [...tecnologiasIcons]  \r\n                            newTecnoIcons[index] = '' \r\n                            setTecnologiasIcons(newTecnoIcons) \r\n                        }  \r\n\r\n                        //setTecnologiasIcons\r\n                        return <Tecno key={index} >\r\n                            <InputTecno type=\"text\" value={tecno} \r\n                                placeholder=\"Tecnologia\"\r\n                                onChange={(e)=> { \r\n                                    const newTecno = [...tecnologias]\r\n                                    newTecno[index] = e.target.value\r\n                                    setTecnologias(newTecno)\r\n                            }}/>\r\n\r\n                            <InputFile required={false} multiple={false} result={'Imagen'} \r\n                            files={tecnologiasIcons[index]} \r\n                            addImage={changeImage2} \r\n                            deleteImage={deleteImage2} /> \r\n                            <Label>\r\n                                Previsualización\r\n                                { tecnologiasIcons != null && tecnologiasIcons[index] != null ? <RowImage_s>     \r\n                                    <ItemRow_s> \r\n                                        <ImagePreview src={tecnologiasIcons[index]}  />\r\n                                    </ItemRow_s> \r\n\r\n                                    <ItemRow_s>  \r\n                                        <BtnIconFAI onClick={async ()=>{deleteImage2()}} \r\n                                        background={'red'}\r\n                                        icon={iconTrash} title={'Eliminar'}/>\r\n                                    </ItemRow_s>  \r\n                                </RowImage_s>\r\n                                : null } \r\n                            </Label> \r\n\r\n                            \r\n                            <TecnoBtn> \r\n                                <BtnIconFAI onClick={()=>{  \r\n                                    const newTecno = [...tecnologias]\r\n                                    newTecno.splice(index, 1)\r\n                                    \r\n                                    const newTecnoIcons = [...tecnologiasIcons] \r\n                                    newTecnoIcons.splice(index, 1) \r\n                                    \r\n                                    setTecnologias(newTecno)\r\n                                    setTecnologiasIcons(newTecnoIcons) \r\n                                }} \r\n                                background={'#ff3838'}  \r\n                                icon={iconTrash}  />\r\n                            </TecnoBtn> \r\n                        </Tecno>\r\n                        \r\n                    })\r\n                }\r\n                \r\n                <TecnoBtn> \r\n                    <BtnIconFAI onClick={()=>{  \r\n                        const newTecno = [...tecnologias]\r\n                        newTecno.push('')\r\n                        setTecnologias(newTecno)\r\n                    }}  \r\n                    content={'Agregar Tecnologia'}  \r\n                    icon={iconPlus}  />\r\n                </TecnoBtn> \r\n                </TecnoArea>\r\n            </Label> \r\n\r\n            <Label>\r\n                Columna (1 - 4)\r\n                <Input type=\"text\" maxLength={1} value={columna} onChange={(e) => {\r\n                    const newVal = e.target.value     \r\n                    if (newVal === ''){ \r\n                        setColumna('') \r\n                        return\r\n                    } \r\n                    const pattern=\"^(0|[1-4][1-4]*)$\"  \r\n                    if(newVal.match(pattern)){  \r\n                        setColumna(newVal) \r\n                    }  \r\n                }} />\r\n            </Label> \r\n            <Label>\r\n                Posicion en Columna (mas cercano a 1 es al inicio)\r\n                <Input type=\"text\" value={columnaPos} onChange={(e) => { \r\n                    const newVal = e.target.value     \r\n                    if (newVal === ''){ \r\n                        setColumnaPos('') \r\n                        return\r\n                    } \r\n                    const pattern=\"^(0|[1-9][0-9]*)$\"  \r\n                    if(newVal.match(pattern)){  \r\n                        setColumnaPos(newVal) \r\n                    }  \r\n                }} />\r\n            </Label> \r\n\r\n            <br />\r\n         \r\n            <Content> \r\n                <Button onClick={handleAcept}> \r\n                    {'Aceptar'}\r\n                </Button>\r\n            </Content> \r\n            <br />\r\n            <br />\r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff; \r\n    display: block;  \r\n    text-align: right;  \r\n    \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px 0;\r\n    display: inline-block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n\r\n\r\nconst Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    padding: 10px 0 0 0; \r\n\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    min-width: 500px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    height: 200px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst RowImage_s = styled.div`  \r\n    position: relative;\r\n    display: table;    \r\n    margin: 5px;  \r\n` \r\n\r\n\r\nconst ItemRow_s = styled.div`  \r\n    position: relative; \r\n    display: table-cell;    \r\n    vertical-align: middle;\r\n    word-wrap: break-word;\r\n    word-break: break-all;    \r\n    padding: 5px;\r\n`  \r\n \r\nconst ImagePreview = styled.img`\r\n  height: 80px;\r\n  max-width: 200px;\r\n  border-radius: 5px; \r\n  position: relative; \r\n`\r\n\r\n\r\nconst Tecno = styled.div`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    position: relative;\r\n    display: flex;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    margin: 10px 0;  \r\n\r\n`\r\n\r\nconst TecnoBtn = styled.div`  \r\n    min-width: 35px;\r\n    width: max-content;\r\n`\r\n\r\nconst TecnoArea = styled.div`\r\n    border: 3px solid ${({theme}) => theme.themesApp.colors_white.background_light};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n`\r\nconst InputTecno = styled.input`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    outline: none;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popDeletePost.jsx",["178","179","180","181","182","183","184","185"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\nimport firebaseClient from '../../services/firebase_client'   \r\n\r\nexport default function PopDeletePost ({ update, firebase, postData, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n     \r\n\r\n    useEffect(() => {   \r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {     \r\n        \r\n        const result = await firebaseClient.deletePost(firebase, postData.postId)\r\n        console.log('result', result)\r\n        update()\r\n        hide()\r\n    }\r\n\r\n    return <PopContainer>   \r\n        <Content> \r\n\r\n            <Parrafo> \r\n                De verdad deseas borrar este articulo? <br /><br />\r\n                ID : {postData.postId} <br /> \r\n                Nombre : {postData.postTitle} <br />\r\n            </Parrafo>\r\n\r\n         </Content> \r\n         <br /><br />\r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Eliminar'}\r\n            </Button>\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff; \r\n    display: block;  \r\n    text-align: right;  \r\n\r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #ff0000;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px 0;\r\n    display: inline-block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n\r\nconst Parrafo = styled.p`\r\n    position: relative; \r\n    display: block;\r\n    text-align: left;\r\n    margin: auto;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.large};\r\n    font-weight: bold;\r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text;\r\n    -webkit-user-select: text;\r\n    -o-user-select: text;\r\n`\r\n\r\n ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popDeleteProyect.jsx",["186","187","188","189","190","191","192","193"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\nimport firebaseClient from '../../services/firebase_client'   \r\n\r\nexport default function PopDeleteProyect ({ update, firebase, proyectData, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n     \r\n\r\n    useEffect(() => {   \r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {     \r\n        \r\n        const result = await firebaseClient.deleteProyect(firebase, proyectData.proyect_id)\r\n        console.log('result', result)\r\n        update()\r\n        hide()\r\n    }\r\n\r\n    return <PopContainer>   \r\n        <Content> \r\n\r\n            <Parrafo> \r\n                De verdad deseas borrar este proyecto? <br /><br />\r\n                ID : {proyectData.proyect_id} <br /> \r\n                Nombre : {proyectData.proyect_title} <br />\r\n            </Parrafo>\r\n\r\n         </Content> \r\n         <br /><br />\r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Eliminar'}\r\n            </Button>\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff; \r\n    display: block;  \r\n    text-align: right;  \r\n\r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #ff0000;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px 0;\r\n    display: inline-block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n\r\nconst Parrafo = styled.p`\r\n    position: relative; \r\n    display: block;\r\n    text-align: left;\r\n    margin: auto;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.large};\r\n    font-weight: bold;\r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text;\r\n    -webkit-user-select: text;\r\n    -o-user-select: text;\r\n`\r\n\r\n ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditPrimaryImage.jsx",["194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\n\r\nexport default function PopEditPrimaryImage ({ elements, index, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n    \r\n    const [images, setImages] = useState ()\r\n   \r\n    const isEmpty = (value) => {\r\n        if (value === undefined || value === null) return ''\r\n        return value\r\n    } \r\n    \r\n\r\n    async function changeImage (value) { \r\n        const newFile = value[0] \r\n         \r\n        const base64 = await getBase64(newFile)\r\n        setImages(base64) \r\n    }\r\n    \r\n    function deleteImage () { \r\n        setImages() \r\n    } \r\n    \r\n    //base64 from file\r\n    const getBase64 = (file) => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file );\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const handleAcept = async (e) => {  \r\n  \r\n        elements.current[index].data = images  \r\n        hide()\r\n    }\r\n\r\n    useEffect(() => {  \r\n        setImages(elements.current[index].data)\r\n    },[])\r\n\r\n    return <PopContainer>   \r\n        \r\n        <InputFile required={false} multiple={false} result={'Imagen'} \r\n            files={images} \r\n            addImage={changeImage} \r\n            deleteImage={deleteImage} />\r\n\r\n        { images != null ? <RowImage_s>     \r\n            <ItemRow_s> \r\n                <ImagePreview src={images}  />\r\n            </ItemRow_s> \r\n\r\n            <ItemRow_s>  \r\n                <BtnIconFAI onClick={async ()=>{deleteImage()}} \r\n                background={'red'}\r\n                icon={iconTrash} title={'Eliminar'}/>\r\n            </ItemRow_s>  \r\n        </RowImage_s>\r\n        : null}\r\n         \r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Aceptar'}\r\n            </Button>\r\n        </Content> \r\n \r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n\r\n\r\nconst Label = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    opacity: .5;   \r\n    text-align: left; \r\n`\r\n\r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst BoxElement = styled.div`     \r\n    vertical-align: top;\r\n    width: 48%; \r\n    display: inline-block;    \r\n    margin: 5px 1%;\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0 5px 0; \r\n    }\r\n`     \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n \r\n \r\nconst PaddingS = styled.div` \r\n    display: block;    \r\n    padding: ${({padding}) => padding};\r\n`  \r\n\r\n  \r\n \r\nconst RowImage_s = styled.div`  \r\n    position: relative;\r\n    display: table;    \r\n    margin: 5px;  \r\n` \r\n\r\n\r\nconst ItemRow_s = styled.div`  \r\n    position: relative; \r\n    display: table-cell;    \r\n    vertical-align: middle;\r\n    word-wrap: break-word;\r\n    word-break: break-all;    \r\n    padding: 5px;\r\n`  \r\n\r\nconst InputFile_s = styled.input`  \r\n    display: none;\r\n` \r\n\r\nconst ImagePreview = styled.img`\r\n  height: 80px;\r\n  max-width: 200px;\r\n  border-radius: 5px; \r\n  position: relative; \r\n`","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditProyect.jsx",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\nimport firebaseClient from '../../services/firebase_client'   \r\nimport firebase_auth from '../../services/firebase_auth';\r\n\r\nexport default function PopEditProyect ({ update, firebase, proyectData, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n    const iconPlus = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [descripcion, setDescripcion] = useState('')\r\n    const [images, setImages] = useState (null)\r\n    const [urlPublic, setUrlPublic] = useState ('')\r\n\r\n    const [tecnologias, setTecnologias] = useState ([])\r\n    const [tecnologiasIcons, setTecnologiasIcons] = useState ([])\r\n    const [columna, setColumna] = useState ('')\r\n    const [columnaPos, setColumnaPos] = useState ('')\r\n\r\n    \r\n\r\n    useEffect(() => {   \r\n\r\n        const tecno = proyectData.proyect_technologies == null || proyectData.proyect_technologies == '' \r\n        ? [] : JSON.parse(proyectData.proyect_technologies)\r\n \r\n        setTitle(proyectData.proyect_title)\r\n        setDescripcion(proyectData.proyect_desc)\r\n        setImages(proyectData.proyect_image)\r\n        setUrlPublic(proyectData.proyect_link)\r\n        setColumna(proyectData.columna)\r\n        setColumnaPos(proyectData.position_col) \r\n        \r\n        const tecnoNames = [] \r\n        const tecnoIcons = []  \r\n        for (let index = 0; index < tecno.length; index++) { \r\n            tecnoNames.push(tecno[index].name)\r\n            tecnoIcons.push(tecno[index].icon)\r\n        } \r\n \r\n        setTecnologias(tecnoNames) \r\n        setTecnologiasIcons(tecnoIcons)\r\n\r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {    \r\n\r\n        if (title == null || title == '') {\r\n            alert ('El titulo no puede estar vacio')\r\n            return \r\n        }else if (descripcion == null || descripcion == ''){\r\n            alert('Coloca alguna descripcion')\r\n            return \r\n        }else if (images == null){\r\n            alert('No se ha seleccionado ninguna imagen')\r\n            return \r\n        }else if (columna == null || columna == ''){\r\n            alert('No se ha seleccionado ninguna columna')\r\n            return\r\n        }else if (columnaPos == null || columnaPos == ''){\r\n            alert('No se ha seleccionado ninguna posicion')\r\n            return\r\n        }\r\n\r\n\r\n        firebase_auth.authState((user)=>{\r\n            if (user) {  \r\n                const uid = user.uid \r\n                handleEdit(uid)\r\n            } else {\r\n                // User is signed out  \r\n                console.log('user no validado' )  \r\n                window.location.href = \"/\" \r\n            }\r\n        })  \r\n    }\r\n\r\n    const handleEdit = async (uid) => {\r\n\r\n        const finalTecnologias = [] \r\n\r\n        for (let index = 0; index < tecnologias.length; index++) {\r\n            finalTecnologias.push({ \r\n                    name: tecnologias[index],\r\n                    icon: tecnologiasIcons[index],\r\n            })\r\n        } \r\n\r\n        const proyect = {\r\n            proyect_image: images,\r\n            proyect_link: urlPublic, \r\n            proyect_technologies: JSON.stringify(finalTecnologias),\r\n            proyect_title: title,\r\n            proyect_desc: descripcion,\r\n            position_col: Number(columnaPos),\r\n            columna: Number(columna),\r\n\r\n            created_date: new Date(),\r\n            updated_date: new Date(),\r\n            created_by: uid,\r\n            updated_by: uid, \r\n        } \r\n\r\n        const result = await firebaseClient.editProyect(firebase, proyect, proyectData.proyect_id)\r\n        console.log('result', result)\r\n        update()\r\n        hide()\r\n\r\n    }\r\n    \r\n    async function changeImage (value) { \r\n        const newFile = value[0] \r\n         \r\n        const base64 = await getBase64(newFile)\r\n        setImages(base64) \r\n    }\r\n    \r\n    function deleteImage () { \r\n        setImages() \r\n    } \r\n    \r\n    //base64 from file\r\n    const getBase64 = (file) => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file );\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n    \r\n    return <PopContainer>    \r\n            <Label>\r\n                Titulo\r\n                <Input type=\"text\" value={title} onChange={(e) => {setTitle(e.target.value)}} />\r\n            </Label> \r\n            <Label>\r\n                Descripcion\r\n                <TextArea type=\"text\" value={descripcion} onChange={(e) => {setDescripcion(e.target.value)}} />\r\n            </Label>\r\n\r\n                \r\n            <InputFile required={false} multiple={false} result={'Imagen'} \r\n                files={images} \r\n                addImage={changeImage} \r\n                deleteImage={deleteImage} />\r\n\r\n            <Label>\r\n                Previsualización\r\n                { images != null ? <RowImage_s>     \r\n                    <ItemRow_s> \r\n                        <ImagePreview src={images}  />\r\n                    </ItemRow_s> \r\n\r\n                    <ItemRow_s>  \r\n                        <BtnIconFAI onClick={async ()=>{deleteImage()}} \r\n                        background={'red'}\r\n                        icon={iconTrash} title={'Eliminar'}/>\r\n                    </ItemRow_s>  \r\n                </RowImage_s>\r\n                : null } \r\n            </Label> \r\n            <Label>\r\n                URL Publica del Proyecto\r\n                <Input type=\"text\" value={urlPublic} onChange={(e) => {setUrlPublic(e.target.value)}} />\r\n            </Label>  \r\n\r\n            <Label>\r\n                Tecnologias\r\n                <TecnoArea> { tecnologias == null ? null\r\n                    : tecnologias.map((tecno, index) => { \r\n\r\n                        async function changeImage2 (value) { \r\n                            const newFile = value[0]                             \r\n                            const base64 = await getBase64(newFile)\r\n                            \r\n                            const newTecnoIcons = [...tecnologiasIcons] \r\n                            newTecnoIcons[index] = base64 \r\n                            setTecnologiasIcons(newTecnoIcons) \r\n                        }\r\n                        \r\n                        function deleteImage2 () {  \r\n                            const newTecnoIcons = [...tecnologiasIcons]  \r\n                            newTecnoIcons[index] = '' \r\n                            setTecnologiasIcons(newTecnoIcons) \r\n                        }  \r\n\r\n                        return <Tecno key={index} >\r\n                            <InputTecno type=\"text\" value={tecno} \r\n                                placeholder=\"Tecnologia\"\r\n                                onChange={(e)=> { \r\n                                    const newTecno = [...tecnologias]\r\n                                    newTecno[index] = e.target.value\r\n                                    setTecnologias(newTecno)\r\n                            }}/>\r\n\r\n                            <InputFile required={false} multiple={false} result={'Imagen'} \r\n                            files={tecnologiasIcons[index]} \r\n                            addImage={changeImage2} \r\n                            deleteImage={deleteImage2} /> \r\n                            <Label>\r\n                                Previsualización\r\n                                { tecnologiasIcons != null && tecnologiasIcons[index] != null ? <RowImage_s>     \r\n                                    <ItemRow_s> \r\n                                        <ImagePreview src={tecnologiasIcons[index]}  />\r\n                                    </ItemRow_s> \r\n\r\n                                    <ItemRow_s>  \r\n                                        <BtnIconFAI onClick={async ()=>{deleteImage2()}} \r\n                                        background={'red'}\r\n                                        icon={iconTrash} title={'Eliminar'}/>\r\n                                    </ItemRow_s>  \r\n                                </RowImage_s>\r\n                                : null } \r\n                            </Label> \r\n\r\n                            \r\n                            <TecnoBtn> \r\n                                <BtnIconFAI onClick={()=>{    \r\n                                    const newTecno = [...tecnologias]\r\n                                    newTecno.splice(index, 1)\r\n                                    \r\n                                    const newTecnoIcons = [...tecnologiasIcons] \r\n                                    newTecnoIcons.splice(index, 1) \r\n                                    \r\n                                    setTecnologias(newTecno)\r\n                                    setTecnologiasIcons(newTecnoIcons) \r\n                                }} \r\n                                background={'#ff3838'}  \r\n                                icon={iconTrash}  />\r\n                            </TecnoBtn> \r\n                        </Tecno>\r\n                        \r\n                    })\r\n                }\r\n                \r\n                <TecnoBtn> \r\n                    <BtnIconFAI onClick={()=>{  \r\n                        const newTecno = [...tecnologias]\r\n                        newTecno.push('')\r\n                        setTecnologias(newTecno)\r\n                    }}  \r\n                    content={'Agregar Tecnologia'}  \r\n                    icon={iconPlus}  />\r\n                </TecnoBtn> \r\n                </TecnoArea>\r\n            </Label> \r\n\r\n            <Label>\r\n                Columna (1 - 4)\r\n                <Input type=\"text\" value={columna} onChange={(e) => {\r\n                    const newVal = e.target.value     \r\n                    if (newVal === ''){ \r\n                        setColumna('') \r\n                        return\r\n                    } \r\n                    const pattern=\"^(0|[1-9][0-9]*)$\"  \r\n                    if(newVal.match(pattern)){  \r\n                        setColumna(newVal) \r\n                    }  \r\n                }} />\r\n            </Label> \r\n            <Label>\r\n                Posicion en Columna (mas cercano a 1 es al inicio)\r\n                <Input type=\"text\" value={columnaPos} onChange={(e) => { \r\n                    const newVal = e.target.value     \r\n                    if (newVal === ''){ \r\n                        setColumnaPos('') \r\n                        return\r\n                    } \r\n                    const pattern=\"^(0|[1-9][0-9]*)$\"  \r\n                    if(newVal.match(pattern)){  \r\n                        setColumnaPos(newVal) \r\n                    }  \r\n                }} />\r\n            </Label> \r\n\r\n            <br />\r\n         \r\n            <Content> \r\n                <Button onClick={handleAcept}> \r\n                    {'Aceptar'}\r\n                </Button>\r\n            </Content> \r\n            <br />\r\n            <br />\r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff; \r\n    display: block;  \r\n    text-align: right;  \r\n    \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px 0;\r\n    display: inline-block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n\r\n\r\nconst Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    padding: 10px 0 0 0; \r\n\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    min-width: 500px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    height: 200px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst RowImage_s = styled.div`  \r\n    position: relative;\r\n    display: table;    \r\n    margin: 5px;  \r\n` \r\n\r\n\r\nconst ItemRow_s = styled.div`  \r\n    position: relative; \r\n    display: table-cell;    \r\n    vertical-align: middle;\r\n    word-wrap: break-word;\r\n    word-break: break-all;    \r\n    padding: 5px;\r\n`  \r\n \r\nconst ImagePreview = styled.img`\r\n  height: 80px;\r\n  max-width: 200px;\r\n  border-radius: 5px; \r\n  position: relative; \r\n`\r\n\r\n\r\nconst Tecno = styled.div`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    position: relative;\r\n    display: flex;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    margin: 10px 0;  \r\n\r\n`\r\n\r\nconst TecnoBtn = styled.div`  \r\n    min-width: 35px;\r\n    width: max-content;\r\n`\r\n\r\nconst TecnoArea = styled.div`\r\n    border: 3px solid ${({theme}) => theme.themesApp.colors_white.background_light};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n`\r\nconst InputTecno = styled.input`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    outline: none;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditText.jsx",["223","224","225","226","227","228","229","230"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\n\r\nexport default function PopEditText ({ elements, index, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n     \r\n    const [text, setText] = useState( )\r\n\r\n    useEffect(() => {    \r\n        setText(elements.current[index].data)\r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {     \r\n        elements.current[index].data = text\r\n        hide()\r\n    }\r\n\r\n    return <PopContainer>    \r\n\r\n         <Label>\r\n            Texto a editar\r\n            <TextArea value={text} onChange={(e)=> setText(e.target.value)}/>\r\n        </Label>\r\n         \r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Guardar'}\r\n            </Button>\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n\r\n\r\nconst Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    padding: 10px 0 0 0; \r\n\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    min-width: 500px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    height: 200px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popEditTitle.jsx",["231","232","233","234","235","236"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\n\r\nexport default function PopEditTitle ({ elements, index, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n    const iconPlus = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    const [title, setTitle] = useState( )\r\n    const [tags, setTags] = useState( )\r\n    const [important, setImportant] = useState( )\r\n     \r\n\r\n    useEffect(() => {    \r\n        const data = elements.current[index].data\r\n\r\n        setTitle(data.title)\r\n        setTags(data.tags)\r\n        setImportant(data.important)\r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {     \r\n        \r\n        elements.current[index].data = {\r\n            title,\r\n            tags,\r\n            important\r\n        }   \r\n        hide()\r\n    }\r\n\r\n    return <PopContainer>     \r\n\r\n        <Label>\r\n            Etiquetas\r\n            <TagArea> { tags == null ? null\r\n                : tags.map((tag, index) => { \r\n\r\n                    return <Tag key={index} >\r\n                        <InputTag type=\"text\" value={tag} \r\n                            placeholder=\"Etiqueta\"\r\n                            onChange={(e)=> { \r\n                                const newTags = [...tags]\r\n                                newTags[index] = e.target.value\r\n                                setTags(newTags)\r\n                        }}/>\r\n                         \r\n                        <TagBtn> \r\n                            <BtnIconFAI onClick={()=>{  \r\n                                const newTags = [...tags]\r\n                                newTags.splice(index, 1)\r\n                                setTags(newTags)\r\n                            }} \r\n                            background={'#ff3838'}  \r\n                            icon={iconTrash}  />\r\n                        </TagBtn> \r\n                    </Tag>\r\n                    \r\n                })\r\n            }\r\n            \r\n            <TagBtn> \r\n                <BtnIconFAI onClick={()=>{  \r\n                    const newTags = [...tags]\r\n                    newTags.push('')\r\n                    setTags(newTags)\r\n                }}  \r\n                content={'Agregar Etiqueta'}  \r\n                icon={iconPlus}  />\r\n            </TagBtn> \r\n            </TagArea>\r\n        </Label>\r\n        <Label>\r\n            Titulo\r\n            <Input type=\"text\" value={title} onChange={(e)=> setTitle(e.target.value)}/>\r\n        </Label>\r\n        <Label>\r\n            Importante\r\n            <TextArea value={important} onChange={(e)=> setImportant(e.target.value)}/>\r\n        </Label>\r\n         <br />\r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Guardar'}\r\n            </Button>\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\nconst Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    padding: 10px 0 0 0; \r\n\r\n`\r\nconst Tag = styled.div`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    position: relative;\r\n    display: flex;\r\n    width: 100%;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    margin: 10px 0;  \r\n\r\n`\r\nconst InputTag = styled.input`\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    outline: none;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst TagBtn = styled.div`  \r\n    min-width: 35px;\r\n    width: max-content;\r\n`\r\n\r\nconst TagArea = styled.div`\r\n    border: 3px solid ${({theme}) => theme.themesApp.colors_white.background_light};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    min-width: 500px;\r\n    position: relative; \r\n    display: block;  \r\n    padding: 5px;\r\n    height: 200px;\r\n    background: ${({theme}) => theme.themesApp.colors_dark.background_light};\r\n    outline: auto;\r\n    border: none;\r\n    font-size: ${({theme}) => theme.themesApp.font_size.normal};\r\n    box-sizing: border-box;\r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popErrorUser.jsx",["237","238","239","240","241","242","243","244"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\n\r\nexport default function PopExample ({ elements, index, hide}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n     \r\n\r\n    useEffect(() => {   \r\n    },[])\r\n\r\n    \r\n    const handleAcept = async (e) => {    \r\n        hide()\r\n    }\r\n\r\n    return <PopContainer>   \r\n         POp Vacio\r\n\r\n         \r\n        <Content> \r\n            <Button onClick={handleAcept}> \r\n                {'Aceptar'}\r\n            </Button>\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popExample.jsx",["245","246","247","248","249","250","251","252"],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popLoginError.jsx",["253","254","255","256","257","258","259","260","261"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';    \r\nimport InputFile from '../InputFile';\r\nimport ContainerPopup, {usePopup} from './containerPop'  \r\nimport BtnIconFAI from '../btnIconFAI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faTrash } from '@fortawesome/free-solid-svg-icons' \r\n\r\nexport default function PopLoginError ({ message}) { \r\n    const iconTrash = <FontAwesomeIcon icon={faTrash} />\r\n     \r\n\r\n    useEffect(() => {   \r\n    },[]) \r\n     \r\n\r\n    return <PopContainer>    \r\n \r\n        <Content>  \r\n            {message}\r\n        </Content> \r\n\r\n    </PopContainer>\r\n    \r\n} \r\n \r\nconst PopContainer = styled.div`\r\n    position: relative; \r\n    display: block;  \r\n`\r\n \r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst Button = styled.div` \r\n    background: #00ccff;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popCustomContainer\\popVentaStatusEdit.jsx",["262","263","264","265","266"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';     \r\nimport InputSelectList from '../InputSelectList.jsx'; \r\nimport LoadingArea from '../loadingArea.jsx';\r\nimport ContainerAlert, {alert} from '../popsMessages/customAlert'   \r\nimport httpClient from '../../services/fetch-client'\r\n\r\nexport default function PopVentaStatusEdit ({index, sale_estatus, client_name, sale_id, updateSale, hide}) { \r\n\r\n    const isEmpty = (value) => {\r\n        if (value === undefined || value === null) return ''\r\n        return value\r\n    }\r\n\r\n    const [estatus, setEstatus] = useState(isEmpty(sale_estatus))\r\n    const [descripcion, setDescripcion] = useState('') \r\n    const [nombre, setNombre] = useState('')     \r\n    const [loading, setLoading] = useState(false)     \r\n    const alertValidation = ({message}) => alert({ message: message, type: 'Mensaje' } );\r\n\r\n    const endpointLovs = '/admin/GetLov/' \r\n    const endpointSales = 'admin/Sales' \r\n \r\n \r\n\r\n    const handleChange = async (e) => {\r\n\r\n        setLoading(true)\r\n\r\n        if (nombre == null || nombre === '') { \r\n            alertValidation({message: 'Porfavor coloca el nombre que aparece en la venta'})\r\n            setLoading(false)\r\n            return\r\n        }\r\n \r\n        if (sale_estatus === estatus) { \r\n            alertValidation({message: 'El estatus seleccionado es el mismo que el actual'})\r\n            setLoading(false)\r\n            return\r\n        }\r\n        \r\n        if ( nombre !== isEmpty(client_name)) { \r\n            alertValidation({message: 'El nombre no coincide con el nombre que aparece en la venta'})\r\n            setLoading(false)\r\n            return\r\n        }\r\n  \r\n        const myPayload = {\r\n            sale_id: sale_id,\r\n            status: estatus,\r\n            desc: descripcion\r\n        }\r\n\r\n        //console.log('myPayload', myPayload)  \r\n        await httpClient.put(endpointSales, myPayload, { 'Content-Type': 'application/json' }) \r\n            .then( ({response, error}) => {\r\n\r\n                if (error) { \r\n                    console.log('Eerror ', error)  \r\n                    setLoading(false)\r\n                }\r\n\r\n                console.log('response ', response)        \r\n                updateSale(index, estatus, descripcion)\r\n            },\r\n            // Nota: es importante manejar errores aquí y no en \r\n            // un bloque catch() para que no interceptemos errores\r\n            // de errores reales en los componentes.\r\n            (error) => { \r\n                console.log('Error ', error)  \r\n                setLoading(false)\r\n            }\r\n        )\r\n        \r\n        setLoading(false)\r\n\r\n        hide()\r\n    \r\n    } \r\n \r\n\r\n    return <div>   \r\n\r\n        <LoadingArea show={loading} />\r\n        <ContainerAlert/>\r\n\r\n        <BoxElement>\r\n            <Label> {'ID'} </Label>\r\n            <Content> {sale_id} </Content> \r\n\r\n            <Label> {'Estatus'} </Label>\r\n            <Content>   \r\n                <InputSelectList required={false} lovName={'LOV_SALE_STATUS'} \r\n                        result={''} editableVal={true} value={estatus} cambioValor={(e)=>{setEstatus(e.target.value)}}\r\n                        lovs={endpointLovs} />  \r\n            </Content> \r\n\r\n            <Label> {'Descripcion del estatus.'} </Label>\r\n            <Content>    \r\n                <InputArea_s value={descripcion} onChange={(e)=>{ setDescripcion(e.target.value) }} maxLength={2000}/>   \r\n            </Content> \r\n\r\n            <Label> {'Escibe el nombre del cliente. \"' + isEmpty(client_name) + '\"'}  </Label>\r\n            <Content>  \r\n                <InputText_s type='text' onWheel={(e)=>{e.target.blur();}} value={nombre} onChange={(e)=>{setNombre(e.target.value) }} />                \r\n            </Content> \r\n        </BoxElement> \r\n \r\n        \r\n        <Content> \r\n            <Button onClick={handleChange}> \r\n                {'Cambiar'}\r\n            </Button>\r\n        </Content> \r\n        <br /> \r\n    </div>\r\n    \r\n} \r\n \r\n\r\nconst Label = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    opacity: .5;   \r\n    text-align: left; \r\n`\r\n\r\nconst Content = styled.div`\r\n    position: relative;\r\n    color: #ffffff;\r\n    display: block;  \r\n    text-align: left;\r\n    margin: auto; \r\n    word-break: break-all;\r\n    user-select: text;\r\n    -moz-user-select: text;\r\n    -khtml-user-select: text; \r\n    -webkit-user-select: text;\r\n    -o-user-select: text;  \r\n` \r\n\r\nconst BoxElement = styled.div`     \r\n    vertical-align: top; \r\n    width: 100%; \r\n    display: inline-block;     \r\n    margin: 5px 0 5px 0; \r\n`     \r\n\r\nconst Button = styled.div` \r\n    background: #ff0000;\r\n    width: max-content;\r\n    height: max-content; \r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 5px; \r\n    padding: 5px 15px;   \r\n    margin: 5px auto;\r\n    display: block;\r\n    outline: none;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    text-align: center;  \r\n    cursor: pointer;\r\n    &&:hover{   \r\n        background: #000000;\r\n        color: #ff0000;\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 100%; \r\n        margin: 5px 0; \r\n    }\r\n` \r\n \r\n \r\nconst PaddingS = styled.div` \r\n    display: block;    \r\n    padding: ${({padding}) => padding};\r\n`  \r\n\r\n  \r\n \r\n\r\nconst InputArea_s = styled.textarea` \r\n    width: 99%;\r\n    min-height: 150px;\r\n    outline: none;\r\n    resize: none;\r\n    display: inline-block;\r\n    border: none;\r\n    background: ${({ theme }) => theme.popStyle.inputBackground}; \r\n    color: ${({ theme }) => theme.popStyle.textInputColor};  \r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    font-size: 25px;\r\n    margin: 10px .5%; \r\n    box-sizing: border-box; \r\n`\r\n\r\nconst InputText_s = styled.input`\r\n  width: 99%;\r\n  outline: none;\r\n  display: inline-block;\r\n  border: none; \r\n  background: ${({ theme }) => theme.popStyle.inputBackground}; \r\n  color: ${({ theme }) => theme.popStyle.textInputColor};  \r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 25px;\r\n  margin: 10px .5%;  \r\n  //Eliminar selectores de numeros\r\n  &&::-webkit-inner-spin-button, ::-webkit-outer-spin-button{\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`\r\n ","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popupSettings.jsx",["267"],"\r\nimport styled, {keyframes} from 'styled-components';\r\nimport WindowDimensions from './windowDimensions.jsx';\r\nimport BtnIconFAI from './btnIconFAI.jsx';\r\nimport NumberPicker from './numberPicker.jsx';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faTimesCircle, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nconst fadeIn = keyframes`    \r\n  from {transform: scale(1.2);} \r\n  to {transform: scale(1.5);}\r\n`;\r\n \r\nconst PopBack = styled.div` \r\n  position: absolute;  \r\n  visibility: ${props => props.visibility};\r\n  opacity: ${props => props.opacity};\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #00000075;\r\n  z-index: 9999;\r\n`\r\n\r\nconst PopDiv = styled.div` \r\n  width: 500px;\r\n  height: max-content;\r\n  max-width: 80%;\r\n  max-height: 70%;\r\n  position: fixed;  //OR ABSOLUTE\r\n  //position: absolute;  //OR FIXED\r\n  z-index: 9999;\r\n  left: ${props => Number(props.positionX)}px; \r\n  top: ${props => Number(props.positionY)}px;   \r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ffffff;\r\n  border: 1px solid #000; \r\n  border-radius: 0;\r\n  border-radius: 10px;\r\n  animation: ${fadeIn} 2000ms normal linear; \r\n  animation-fill-mode: both; \r\n`  \r\n\r\nconst PopHeader = styled.div`  \r\n  display: flex;\r\n  align-items: center;  \r\n  width: 100%;\r\n  height: max-content; \r\n  position: relative; \r\n  box-sizing: border-box; \r\n  padding: 5px 5px; \r\n\r\n` \r\n\r\nconst PopBody = styled.div`  \r\n  display: block;\r\n  overflow-x: hidden;\r\n  overflow-y: auto; \r\n  position: relative; \r\n  padding: 2px 15px; \r\n  width: 100%; \r\n  min-height: 150px;\r\n  max-height: 50vh;\r\n  height: max-content; \r\n  box-sizing: border-box;  \r\n  overflow-y: scroll;\r\n\r\n`\r\n\r\nconst PopFootter = styled.div`   \r\ndisplay: flex; \r\nwidth: 100%; \r\nheight: max-content; \r\nposition: relative;  \r\nbox-sizing: border-box;  \r\npadding: 5px 5px; \r\n`\r\n\r\nconst Title = styled.div` \r\nposition: relative;\r\ndisplay: inline-block; \r\ntext-align: start;\r\nfont-weight: bold;\r\ncolor: #616161;\r\nwidth: 100%;\r\npadding: 0 10px;\r\nleft: 0; \r\n`\r\nconst Line = styled.div`\r\nbackground: #616161;\r\nposition: relative;\r\ndisplay: block; \r\nwidth: 100%;\r\nheight: 2px;\r\nmargin: 8px 0 0 1px;\r\nbox-sizing: border-box;\r\npointer-events: none;\r\n`\r\n\r\nconst DisplayLeft = styled.div`  \r\nposition: relative;\r\ndisplay: inline-block; \r\nmargin: auto auto auto 0; \r\n`\r\n\r\nconst DisplayRigth = styled.div` \r\nposition: relative; \r\ndisplay: inline-block; \r\nmargin: auto 0 auto auto; \r\n`\r\n\r\nvar mouseXBefore = null\r\nvar mouseYBefore = null\r\n\r\nconst popName = 'popSettings'\r\n\r\n\r\nexport default function PopupSettings (props){\r\n\r\n    const width = useRef(WindowDimensions().width) \r\n    const height = useRef (WindowDimensions().height)\r\n    const [windowPosX, setWindowPosX] = useState (0)\r\n    const [windowPosY, setWindowPosY] = useState (0)\r\n   \r\n    const iconExit = <FontAwesomeIcon icon={faTimes} />\r\n    const iconExit2 = <FontAwesomeIcon icon={faTimesCircle} />\r\n    const iconAcept = <FontAwesomeIcon icon={faCheck} />\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      setWindowPosX((width.current - document.getElementById(popName).offsetWidth) / 2)\r\n      setWindowPosY((height.current - document.getElementById(popName).offsetHeight) / 3)\r\n      console.log ('PopDiv : ', document.getElementById(popName).offsetWidth)\r\n\r\n    }, [])\r\n\r\n \r\n    //Funcion mouse Event change popup window position\r\n    function detectMouse (event) {\r\n      if (mouseXBefore == null){\r\n        mouseXBefore = event.pageX - 1\r\n        mouseYBefore = event.pageY - 1\r\n      }\r\n      const elementBounding = document.getElementById(popName).getBoundingClientRect() \r\n      \r\n      setWindowPosX(elementBounding.x + (event.pageX - mouseXBefore) )\r\n      setWindowPosY(elementBounding.y + (event.pageY - mouseYBefore) )\r\n\r\n      \r\n      mouseXBefore = event.pageX\r\n      mouseYBefore = event.pageY  \r\n\r\n    }\r\n\r\n    function handleWindowMouseDown (event) {       \r\n       document.onmousemove = detectMouse;\r\n       //document.onmousemove = getCursorXY;\r\n        //console.log('onMouseDown')\r\n    }\r\n\r\n    function handleWindowMouseUp (event) {\r\n      document.onmousemove = null;\r\n        //console.log('MouseUp')\r\n    }\r\n\r\n    function handleWindowMouseClick (event) {\r\n      document.onmousemove = null;\r\n        //console.log('MouseClick')\r\n    }\r\n\r\n    return  <PopBack visibility={props.visibility} opacity={props.opacity}  > \r\n                <PopDiv positionX={windowPosX} positionY={windowPosY} id={popName} anim={fadeIn}>  \r\n                    <PopHeader >                       \r\n                          <Title  onMouseDown={()=> handleWindowMouseDown()} \r\n                                onMouseUp={()=> handleWindowMouseUp()} \r\n                                onClick={(e)=> handleWindowMouseClick()}>    \r\n                              Ajustes\r\n                              <Line/>\r\n                          </Title>\r\n                          <BtnIconFAI onClick={props.closeClic} stylesInfo={props.stylesInfo.btnStyle} icon={iconExit2} content=\"Cerrar\" />\r\n                    </PopHeader>\r\n                    <PopBody>\r\n                                              \r\n                          <Title> \r\n                              Tiempo \r\n                          </Title>    \r\n                          <NumberPicker ></NumberPicker>  \r\n                          <div>button <input type='button'></input></div>\r\n                          <div>checkbox  <input type='checkbox'></input></div>\r\n                          <div>color  <input type='color'></input></div>\r\n                          <div>date  <input type='date'></input></div>\r\n                          <div>datetime-local  <input type='datetime-local'></input></div> \r\n                          <div>month  <input type='month'></input></div>\r\n                          <div>number  <input type='number'></input></div>  \r\n                          <div>search  <input type='search'></input></div> \r\n                          <div>time  <input type='time'></input> </div>\r\n                          <div>week  <input type='week'></input></div>\r\n                          <Title> \r\n                              Tonos \r\n                          </Title> \r\n                    </PopBody>\r\n                    <PopFootter> \r\n                          <DisplayLeft> \r\n                                <BtnIconFAI onClick={props.closeClic} stylesInfo={props.stylesInfo.btnStyle} icon={iconExit} content=\"Cancelar\" />\r\n                          </DisplayLeft>  \r\n                          <DisplayRigth> \r\n                                <BtnIconFAI onClick={props.closeClic} stylesInfo={props.stylesInfo.btnStyle} icon={iconAcept} content=\"Aceptar\" />\r\n                          </DisplayRigth>     \r\n                    </PopFootter>\r\n        \r\n                </PopDiv>\r\n            </PopBack>\r\n \r\n}","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\popupTemplate.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabInfo.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabs.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabTasks.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\tabTips.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\timerClock.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\windowDimensions.jsx",["268"],"import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  return {\r\n    width: 1920, height: 1080\r\n  }\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function WindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\copia.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\privacypolicy\\codigo.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\pages\\privacypolicy\\volado3d.jsx",[],"C:\\Users\\FSC\\Documents\\MAS\\Documentos\\PROYECTOS_FSC\\WEB\\PomodoroApp\\pomodoro-app\\components\\title.jsx",[],{"ruleId":"269","severity":1,"message":"270","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":21},{"ruleId":"269","severity":1,"message":"273","line":13,"column":10,"nodeType":"271","messageId":"272","endLine":13,"endColumn":19},{"ruleId":"269","severity":1,"message":"274","line":5,"column":10,"nodeType":"271","messageId":"272","endLine":5,"endColumn":17},{"ruleId":"269","severity":1,"message":"275","line":56,"column":23,"nodeType":"271","messageId":"272","endLine":56,"endColumn":35},{"ruleId":"269","severity":1,"message":"276","line":57,"column":23,"nodeType":"271","messageId":"272","endLine":57,"endColumn":35},{"ruleId":"269","severity":1,"message":"273","line":1,"column":10,"nodeType":"271","messageId":"272","endLine":1,"endColumn":19},{"ruleId":"269","severity":1,"message":"277","line":7,"column":22,"nodeType":"271","messageId":"272","endLine":7,"endColumn":35},{"ruleId":"269","severity":1,"message":"278","line":8,"column":26,"nodeType":"271","messageId":"272","endLine":8,"endColumn":43},{"ruleId":"269","severity":1,"message":"279","line":9,"column":25,"nodeType":"271","messageId":"272","endLine":9,"endColumn":41},{"ruleId":"280","severity":1,"message":"281","line":58,"column":25,"nodeType":"282","messageId":"283","endLine":58,"endColumn":36},{"ruleId":"269","severity":1,"message":"284","line":244,"column":7,"nodeType":"271","messageId":"272","endLine":244,"endColumn":20},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"274","line":7,"column":18,"nodeType":"271","messageId":"272","endLine":7,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":33,"column":36,"nodeType":"290","messageId":"291","endLine":33,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":36,"column":54,"nodeType":"290","messageId":"291","endLine":36,"endColumn":56},{"ruleId":"288","severity":1,"message":"289","line":42,"column":46,"nodeType":"290","messageId":"291","endLine":42,"endColumn":48},{"ruleId":"288","severity":1,"message":"289","line":45,"column":52,"nodeType":"290","messageId":"291","endLine":45,"endColumn":54},{"ruleId":"280","severity":1,"message":"292","line":135,"column":36,"nodeType":"282","messageId":"283","endLine":135,"endColumn":48},{"ruleId":"280","severity":1,"message":"293","line":136,"column":21,"nodeType":"282","messageId":"283","endLine":136,"endColumn":32},{"ruleId":"280","severity":1,"message":"293","line":140,"column":21,"nodeType":"282","messageId":"283","endLine":140,"endColumn":32},{"ruleId":"280","severity":1,"message":"292","line":189,"column":97,"nodeType":"282","messageId":"283","endLine":189,"endColumn":109},{"ruleId":"280","severity":1,"message":"293","line":190,"column":37,"nodeType":"282","messageId":"283","endLine":190,"endColumn":48},{"ruleId":"280","severity":1,"message":"293","line":194,"column":37,"nodeType":"282","messageId":"283","endLine":194,"endColumn":48},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"294","line":1,"column":36,"nodeType":"271","messageId":"272","endLine":1,"endColumn":44},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":11,"column":11,"nodeType":"271","messageId":"272","endLine":11,"endColumn":20},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"294","line":1,"column":36,"nodeType":"271","messageId":"272","endLine":1,"endColumn":44},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":11,"column":11,"nodeType":"271","messageId":"272","endLine":11,"endColumn":20},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"298","line":14,"column":11,"nodeType":"271","messageId":"272","endLine":14,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":47,"column":7,"nodeType":"301","endLine":47,"endColumn":9,"suggestions":"302"},{"ruleId":"280","severity":1,"message":"292","line":56,"column":28,"nodeType":"282","messageId":"283","endLine":56,"endColumn":40},{"ruleId":"280","severity":1,"message":"293","line":57,"column":13,"nodeType":"282","messageId":"283","endLine":57,"endColumn":24},{"ruleId":"280","severity":1,"message":"293","line":61,"column":13,"nodeType":"282","messageId":"283","endLine":61,"endColumn":24},{"ruleId":"269","severity":1,"message":"303","line":85,"column":7,"nodeType":"271","messageId":"272","endLine":85,"endColumn":12},{"ruleId":"269","severity":1,"message":"304","line":107,"column":7,"nodeType":"271","messageId":"272","endLine":107,"endColumn":17},{"ruleId":"269","severity":1,"message":"305","line":145,"column":7,"nodeType":"271","messageId":"272","endLine":145,"endColumn":15},{"ruleId":"269","severity":1,"message":"306","line":168,"column":7,"nodeType":"271","messageId":"272","endLine":168,"endColumn":18},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"274","line":7,"column":18,"nodeType":"271","messageId":"272","endLine":7,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":29,"column":100,"nodeType":"290","messageId":"291","endLine":29,"endColumn":102},{"ruleId":"299","severity":1,"message":"307","line":49,"column":7,"nodeType":"301","endLine":49,"endColumn":9,"suggestions":"308"},{"ruleId":"288","severity":1,"message":"289","line":54,"column":36,"nodeType":"290","messageId":"291","endLine":54,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":57,"column":54,"nodeType":"290","messageId":"291","endLine":57,"endColumn":56},{"ruleId":"288","severity":1,"message":"289","line":63,"column":46,"nodeType":"290","messageId":"291","endLine":63,"endColumn":48},{"ruleId":"288","severity":1,"message":"289","line":66,"column":52,"nodeType":"290","messageId":"291","endLine":66,"endColumn":54},{"ruleId":"280","severity":1,"message":"292","line":154,"column":36,"nodeType":"282","messageId":"283","endLine":154,"endColumn":48},{"ruleId":"280","severity":1,"message":"293","line":155,"column":21,"nodeType":"282","messageId":"283","endLine":155,"endColumn":32},{"ruleId":"280","severity":1,"message":"293","line":159,"column":21,"nodeType":"282","messageId":"283","endLine":159,"endColumn":32},{"ruleId":"280","severity":1,"message":"292","line":207,"column":97,"nodeType":"282","messageId":"283","endLine":207,"endColumn":109},{"ruleId":"280","severity":1,"message":"293","line":208,"column":37,"nodeType":"282","messageId":"283","endLine":208,"endColumn":48},{"ruleId":"280","severity":1,"message":"293","line":212,"column":37,"nodeType":"282","messageId":"283","endLine":212,"endColumn":48},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":10,"column":11,"nodeType":"271","messageId":"272","endLine":10,"endColumn":20},{"ruleId":"299","severity":1,"message":"309","line":16,"column":7,"nodeType":"301","endLine":16,"endColumn":9,"suggestions":"310"},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"274","line":7,"column":18,"nodeType":"271","messageId":"272","endLine":7,"endColumn":25},{"ruleId":"299","severity":1,"message":"311","line":24,"column":7,"nodeType":"301","endLine":24,"endColumn":9,"suggestions":"312"},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"294","line":1,"column":36,"nodeType":"271","messageId":"272","endLine":1,"endColumn":44},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":10,"column":11,"nodeType":"271","messageId":"272","endLine":10,"endColumn":20},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"294","line":1,"column":36,"nodeType":"271","messageId":"272","endLine":1,"endColumn":44},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":10,"column":11,"nodeType":"271","messageId":"272","endLine":10,"endColumn":20},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"269","severity":1,"message":"294","line":1,"column":36,"nodeType":"271","messageId":"272","endLine":1,"endColumn":44},{"ruleId":"269","severity":1,"message":"295","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"286","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":22},{"ruleId":"269","severity":1,"message":"287","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":10,"column":11,"nodeType":"271","messageId":"272","endLine":10,"endColumn":20},{"ruleId":"269","severity":1,"message":"313","line":46,"column":7,"nodeType":"271","messageId":"272","endLine":46,"endColumn":13},{"ruleId":"269","severity":1,"message":"273","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"285","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":34},{"ruleId":"280","severity":1,"message":"314","line":100,"column":17,"nodeType":"282","messageId":"283","endLine":100,"endColumn":119},{"ruleId":"280","severity":1,"message":"315","line":105,"column":17,"nodeType":"282","messageId":"283","endLine":105,"endColumn":138},{"ruleId":"269","severity":1,"message":"305","line":177,"column":7,"nodeType":"271","messageId":"272","endLine":177,"endColumn":15},{"ruleId":"269","severity":1,"message":"316","line":7,"column":10,"nodeType":"271","messageId":"272","endLine":7,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":7,"column":3,"nodeType":"319","messageId":"320","endLine":11,"endColumn":5},"no-unused-vars","'PopupTemplate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'faTimes' is defined but never used.","'setNumberMax' is assigned a value but never used.","'setNumberMin' is assigned a value but never used.","'setTitleState' is assigned a value but never used.","'setCloseIconState' is assigned a value but never used.","'setCloseBtnState' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Message_s must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'MessageNote_s' is assigned a value but never used.","'useRef' is defined but never used.","'ContainerPopup' is defined but never used.","'usePopup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Imported JSX component RowImage_s must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ItemRow_s must be in PascalCase or SCREAMING_SNAKE_CASE","'useState' is defined but never used.","'InputFile' is defined but never used.","'BtnIconFAI' is defined but never used.","'iconTrash' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'elements' and 'index'. Either include them or remove the dependency array. If 'setImages' needs the current value of 'elements', you can also switch to useReducer instead of useState and read 'elements' in the reducer.","ArrayExpression",["321"],"'Label' is assigned a value but never used.","'BoxElement' is assigned a value but never used.","'PaddingS' is assigned a value but never used.","'InputFile_s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'proyectData.columna', 'proyectData.position_col', 'proyectData.proyect_desc', 'proyectData.proyect_image', 'proyectData.proyect_link', 'proyectData.proyect_technologies', and 'proyectData.proyect_title'. Either include them or remove the dependency array. If 'setTitle' needs the current value of 'proyectData.proyect_title', you can also switch to useReducer instead of useState and read 'proyectData.proyect_title' in the reducer.",["322"],"React Hook useEffect has missing dependencies: 'elements' and 'index'. Either include them or remove the dependency array. If 'setText' needs the current value of 'elements', you can also switch to useReducer instead of useState and read 'elements' in the reducer.",["323"],"React Hook useEffect has missing dependencies: 'elements' and 'index'. Either include them or remove the dependency array.",["324"],"'Button' is assigned a value but never used.","Imported JSX component InputArea_s must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component InputText_s must be in PascalCase or SCREAMING_SNAKE_CASE","'faWindowClose' is defined but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"325","fix":"329"},{"desc":"325","fix":"330"},"Update the dependencies array to be: [elements, index]",{"range":"331","text":"332"},"Update the dependencies array to be: [proyectData.columna, proyectData.position_col, proyectData.proyect_desc, proyectData.proyect_image, proyectData.proyect_link, proyectData.proyect_technologies, proyectData.proyect_title]",{"range":"333","text":"334"},{"range":"335","text":"332"},{"range":"336","text":"332"},[1442,1444],"[elements, index]",[1971,1973],"[proyectData.columna, proyectData.position_col, proyectData.proyect_desc, proyectData.proyect_image, proyectData.proyect_link, proyectData.proyect_technologies, proyectData.proyect_title]",[639,641],[902,904]]